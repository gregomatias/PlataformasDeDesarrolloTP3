// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP1;

#nullable disable

namespace TP1.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20221123015822_migracionPrueba7")]
    partial class migracionPrueba7
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TP1.CajaDeAhorro", b =>
                {
                    b.Property<int>("_id_caja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id_caja"));

                    b.Property<string>("_cbu")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("_saldo")
                        .HasColumnType("float");

                    b.HasKey("_id_caja");

                    b.ToTable("Caja_ahorro", (string)null);

                    b.HasData(
                        new
                        {
                            idcaja = 1,
                            cbu = "11120221121",
                            saldo = 0.0
                        },
                        new
                        {
                            idcaja = 2,
                            cbu = "22220221122",
                            saldo = 0.0
                        },
                        new
                        {
                            idcaja = 3,
                            cbu = "33320221123",
                            saldo = 0.0
                        },
                        new
                        {
                            idcaja = 4,
                            cbu = "44420221124",
                            saldo = 0.0
                        },
                        new
                        {
                            idcaja = 5,
                            cbu = "55520221125",
                            saldo = 0.0
                        },
                        new
                        {
                            idcaja = 6,
                            cbu = "66620221125",
                            saldo = 0.0
                        });
                });

            modelBuilder.Entity("TP1.Movimiento", b =>
                {
                    b.Property<int>("_id_Movimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id_Movimiento"));

                    b.Property<string>("_detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("_fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("_id_CajaDeAhorro")
                        .HasColumnType("int");

                    b.Property<double>("_monto")
                        .HasColumnType("float");

                    b.HasKey("_id_Movimiento");

                    b.HasIndex("_id_CajaDeAhorro");

                    b.ToTable("Movimiento", (string)null);
                });

            modelBuilder.Entity("TP1.Pago", b =>
                {
                    b.Property<int>("_id_pago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id_pago"));

                    b.Property<string>("_detalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("_id_metodo")
                        .HasColumnType("bigint");

                    b.Property<int>("_id_usuario")
                        .HasColumnType("int");

                    b.Property<string>("_metodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("_monto")
                        .HasColumnType("float");

                    b.Property<bool>("_pagado")
                        .HasColumnType("bit");

                    b.HasKey("_id_pago");

                    b.HasIndex("_id_usuario");

                    b.ToTable("Pago", (string)null);
                });

            modelBuilder.Entity("TP1.PlazoFijo", b =>
                {
                    b.Property<int>("_id_plazoFijo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id_plazoFijo"));

                    b.Property<DateTime>("_fechaFin")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("_fechaIni")
                        .HasColumnType("datetime");

                    b.Property<int>("_id_usuario")
                        .HasColumnType("int");

                    b.Property<double>("_monto")
                        .HasColumnType("float");

                    b.Property<bool>("_pagado")
                        .HasColumnType("bit");

                    b.Property<double>("_tasa")
                        .HasColumnType("float");

                    b.HasKey("_id_plazoFijo");

                    b.HasIndex("_id_usuario");

                    b.ToTable("Plazo_fijo", (string)null);

                    b.HasData(
                        new
                        {
                            idplazoFijo = 1,
                            fechaFin = new DateTime(2022, 12, 22, 22, 58, 21, 934, DateTimeKind.Local).AddTicks(3387),
                            fechaIni = new DateTime(2022, 11, 22, 22, 58, 21, 934, DateTimeKind.Local).AddTicks(3380),
                            idusuario = 1,
                            monto = 1000.0,
                            pagado = false,
                            tasa = 1.5
                        },
                        new
                        {
                            idplazoFijo = 2,
                            fechaFin = new DateTime(2022, 12, 22, 22, 58, 21, 934, DateTimeKind.Local).AddTicks(3394),
                            fechaIni = new DateTime(2022, 11, 22, 22, 58, 21, 934, DateTimeKind.Local).AddTicks(3393),
                            idusuario = 2,
                            monto = 2000.0,
                            pagado = false,
                            tasa = 1.5
                        },
                        new
                        {
                            idplazoFijo = 3,
                            fechaFin = new DateTime(2022, 12, 22, 22, 58, 21, 934, DateTimeKind.Local).AddTicks(3396),
                            fechaIni = new DateTime(2022, 11, 22, 22, 58, 21, 934, DateTimeKind.Local).AddTicks(3395),
                            idusuario = 3,
                            monto = 3000.0,
                            pagado = false,
                            tasa = 1.5
                        },
                        new
                        {
                            idplazoFijo = 4,
                            fechaFin = new DateTime(2022, 12, 22, 22, 58, 21, 934, DateTimeKind.Local).AddTicks(3397),
                            fechaIni = new DateTime(2022, 11, 22, 22, 58, 21, 934, DateTimeKind.Local).AddTicks(3397),
                            idusuario = 4,
                            monto = 4000.0,
                            pagado = false,
                            tasa = 1.5
                        });
                });

            modelBuilder.Entity("TP1.TarjetaDeCredito", b =>
                {
                    b.Property<int>("_id_tarjeta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id_tarjeta"));

                    b.Property<int>("_codigoV")
                        .HasColumnType("int");

                    b.Property<double>("_consumos")
                        .HasColumnType("float");

                    b.Property<int>("_id_usuario")
                        .HasColumnType("int");

                    b.Property<double>("_limite")
                        .HasColumnType("float");

                    b.Property<string>("_numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("_id_tarjeta");

                    b.HasIndex("_id_usuario");

                    b.ToTable("Tarjeta_credito", (string)null);

                    b.HasData(
                        new
                        {
                            idtarjeta = 1,
                            codigoV = 0,
                            consumos = 100.0,
                            idusuario = 1,
                            limite = 500000.0,
                            numero = "11120221121"
                        },
                        new
                        {
                            idtarjeta = 2,
                            codigoV = 0,
                            consumos = 900.0,
                            idusuario = 2,
                            limite = 400000.0,
                            numero = "22220221121"
                        },
                        new
                        {
                            idtarjeta = 3,
                            codigoV = 0,
                            consumos = 400.0,
                            idusuario = 3,
                            limite = 600000.0,
                            numero = "33320221121"
                        },
                        new
                        {
                            idtarjeta = 4,
                            codigoV = 0,
                            consumos = 600.0,
                            idusuario = 4,
                            limite = 200000.0,
                            numero = "44420221121"
                        });
                });

            modelBuilder.Entity("TP1.Usuario", b =>
                {
                    b.Property<int>("_id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("_id_usuario"));

                    b.Property<string>("_apellido")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("_bloqueado")
                        .HasColumnType("bit");

                    b.Property<int>("_dni")
                        .HasColumnType("int");

                    b.Property<bool>("_esUsuarioAdmin")
                        .HasColumnType("bit");

                    b.Property<int>("_intentosFallidos")
                        .HasColumnType("int");

                    b.Property<string>("_mail")
                        .IsRequired()
                        .HasColumnType("varchar(512)");

                    b.Property<string>("_nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("_password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("_id_usuario");

                    b.ToTable("Usuario", (string)null);

                    b.HasData(
                        new
                        {
                            idusuario = 1,
                            apellido = "GREGO",
                            bloqueado = false,
                            dni = 111,
                            esUsuarioAdmin = false,
                            intentosFallidos = 0,
                            mail = "M@G",
                            nombre = "MATIAS",
                            password = "111"
                        },
                        new
                        {
                            idusuario = 2,
                            apellido = "RIVA",
                            bloqueado = false,
                            dni = 222,
                            esUsuarioAdmin = false,
                            intentosFallidos = 0,
                            mail = "A@R",
                            nombre = "ALAN",
                            password = "222"
                        },
                        new
                        {
                            idusuario = 3,
                            apellido = "VILLEGAS",
                            bloqueado = false,
                            dni = 333,
                            esUsuarioAdmin = false,
                            intentosFallidos = 0,
                            mail = "N@V",
                            nombre = "NICOLAS",
                            password = "333"
                        },
                        new
                        {
                            idusuario = 4,
                            apellido = "GOMEZ",
                            bloqueado = false,
                            dni = 444,
                            esUsuarioAdmin = true,
                            intentosFallidos = 0,
                            mail = "W@G",
                            nombre = "WALTER",
                            password = "444"
                        });
                });

            modelBuilder.Entity("TP1.UsuarioCajaDeAhorro", b =>
                {
                    b.Property<int>("_id_caja")
                        .HasColumnType("int");

                    b.Property<int>("_id_usuario")
                        .HasColumnType("int");

                    b.HasKey("_id_caja", "_id_usuario");

                    b.HasIndex("_id_usuario");

                    b.ToTable("UsuarioCajaDeAhorro");

                    b.HasData(
                        new
                        {
                            idcaja = 1,
                            idusuario = 1
                        },
                        new
                        {
                            idcaja = 2,
                            idusuario = 2
                        },
                        new
                        {
                            idcaja = 3,
                            idusuario = 3
                        },
                        new
                        {
                            idcaja = 4,
                            idusuario = 4
                        },
                        new
                        {
                            idcaja = 5,
                            idusuario = 1
                        },
                        new
                        {
                            idcaja = 6,
                            idusuario = 1
                        });
                });

            modelBuilder.Entity("TP1.Movimiento", b =>
                {
                    b.HasOne("TP1.CajaDeAhorro", "_cajaDeAhorro")
                        .WithMany("_movimientos")
                        .HasForeignKey("_id_CajaDeAhorro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_cajaDeAhorro");
                });

            modelBuilder.Entity("TP1.Pago", b =>
                {
                    b.HasOne("TP1.Usuario", "_usuario")
                        .WithMany("_pagos")
                        .HasForeignKey("_id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_usuario");
                });

            modelBuilder.Entity("TP1.PlazoFijo", b =>
                {
                    b.HasOne("TP1.Usuario", "_titular")
                        .WithMany("_plazosFijos")
                        .HasForeignKey("_id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_titular");
                });

            modelBuilder.Entity("TP1.TarjetaDeCredito", b =>
                {
                    b.HasOne("TP1.Usuario", "_titular")
                        .WithMany("_tarjetas")
                        .HasForeignKey("_id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("_titular");
                });

            modelBuilder.Entity("TP1.UsuarioCajaDeAhorro", b =>
                {
                    b.HasOne("TP1.CajaDeAhorro", "caja")
                        .WithMany("usuarioCajas")
                        .HasForeignKey("_id_caja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP1.Usuario", "user")
                        .WithMany("usuarioCajas")
                        .HasForeignKey("_id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("caja");

                    b.Navigation("user");
                });

            modelBuilder.Entity("TP1.CajaDeAhorro", b =>
                {
                    b.Navigation("_movimientos");

                    b.Navigation("usuarioCajas");
                });

            modelBuilder.Entity("TP1.Usuario", b =>
                {
                    b.Navigation("_pagos");

                    b.Navigation("_plazosFijos");

                    b.Navigation("_tarjetas");

                    b.Navigation("usuarioCajas");
                });
#pragma warning restore 612, 618
        }
    }
}
